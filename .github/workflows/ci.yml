name: CI/CD

on:
  pull_request:

permissions:
  pull-requests: write
  issues: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/j_morales_mlops_u2:latest

jobs:
  comment-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: |
          pip install -r requirements.txt

      - name: Ejecutar pruebas unitarias
        run: pytest --maxfail=1 --disable-warnings -q

      - name: CI/CD en acción. Ejecutando tareas …
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "CI/CD en acción. Ejecutando tareas …"
            })

      - name: CI/CD terminado con éxito.
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
                body: "CI/CD terminado con éxito."
              })
  
      - name: CI/CD terminado con error.
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "CI/CD terminado con error."
            })

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image to GHCR
        run: docker push $IMAGE_NAME

      - name: Ejecutar pruebas unitarias (verificación final)
        run: pytest --maxfail=1 --disable-warnings -q

